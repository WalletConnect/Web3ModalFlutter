// Mocks generated by Mockito 5.4.3 from annotations
// in web3modal_flutter/test/mock_classes.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i16;
import 'dart:convert' as _i31;
import 'dart:typed_data' as _i32;
import 'dart:ui' as _i22;

import 'package:event/event.dart' as _i3;
import 'package:flutter/foundation.dart' as _i2;
import 'package:flutter/material.dart' as _i12;
import 'package:http/http.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:url_launcher/url_launcher.dart' as _i24;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/i_message_tracker.dart'
    as _i8;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/json_rpc_2/src/peer.dart'
    as _i30;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/relay_client.dart'
    as _i29;
import 'package:walletconnect_flutter_v2/apis/core/relay_client/websocket/i_websocket_handler.dart'
    as _i9;
import 'package:walletconnect_flutter_v2/apis/core/store/i_generic_store.dart'
    as _i5;
import 'package:walletconnect_flutter_v2/apis/core/store/i_store.dart' as _i7;
import 'package:walletconnect_flutter_v2/apis/sign_api/i_sessions.dart' as _i6;
import 'package:walletconnect_flutter_v2/walletconnect_flutter_v2.dart' as _i4;
import 'package:web3modal_flutter/models/grid_item.dart' as _i34;
import 'package:web3modal_flutter/models/w3m_chain_info.dart' as _i21;
import 'package:web3modal_flutter/models/w3m_wallet_info.dart' as _i15;
import 'package:web3modal_flutter/services/blockchain_api_service/blockchain_api_utils.dart'
    as _i35;
import 'package:web3modal_flutter/services/blockchain_api_service/blockchain_identity.dart'
    as _i11;
import 'package:web3modal_flutter/services/explorer_service/explorer_service.dart'
    as _i13;
import 'package:web3modal_flutter/services/explorer_service/models/api_response.dart'
    as _i18;
import 'package:web3modal_flutter/services/explorer_service/models/redirect.dart'
    as _i17;
import 'package:web3modal_flutter/services/ledger_service/ledger_service.dart'
    as _i36;
import 'package:web3modal_flutter/services/network_service/network_service.dart'
    as _i33;
import 'package:web3modal_flutter/services/storage_service/storage_service.dart'
    as _i37;
import 'package:web3modal_flutter/services/w3m_service/i_w3m_service.dart'
    as _i20;
import 'package:web3modal_flutter/utils/platform/i_platform_utils.dart' as _i25;
import 'package:web3modal_flutter/utils/platform/platform_utils.dart' as _i26;
import 'package:web3modal_flutter/utils/toast/toast_message.dart' as _i28;
import 'package:web3modal_flutter/utils/toast/toast_utils.dart' as _i27;
import 'package:web3modal_flutter/utils/url/url_utils.dart' as _i23;
import 'package:web3modal_flutter/web3modal_flutter.dart' as _i19;
import 'package:web3modal_flutter/widgets/widget_stack/widget_stack.dart'
    as _i38;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_1<T extends _i3.EventArgs> extends _i1.SmartFake
    implements _i3.Event<T> {
  _FakeEvent_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeICore_2 extends _i1.SmartFake implements _i4.ICore {
  _FakeICore_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePairingMetadata_3 extends _i1.SmartFake
    implements _i4.PairingMetadata {
  _FakePairingMetadata_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeISignEngine_4 extends _i1.SmartFake implements _i4.ISignEngine {
  _FakeISignEngine_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIAuthEngine_5 extends _i1.SmartFake implements _i4.IAuthEngine {
  _FakeIAuthEngine_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIGenericStore_6<T> extends _i1.SmartFake
    implements _i5.IGenericStore<T> {
  _FakeIGenericStore_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeISessions_7 extends _i1.SmartFake implements _i6.ISessions {
  _FakeISessions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIPairingStore_8 extends _i1.SmartFake implements _i4.IPairingStore {
  _FakeIPairingStore_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectResponse_9 extends _i1.SmartFake
    implements _i4.ConnectResponse {
  _FakeConnectResponse_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRequestResponse_10 extends _i1.SmartFake
    implements _i4.AuthRequestResponse {
  _FakeAuthRequestResponse_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIStore_11<T> extends _i1.SmartFake implements _i7.IStore<T> {
  _FakeIStore_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSessionData_12 extends _i1.SmartFake implements _i4.SessionData {
  _FakeSessionData_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIMessageTracker_13 extends _i1.SmartFake
    implements _i8.IMessageTracker {
  _FakeIMessageTracker_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIWebSocketHandler_14 extends _i1.SmartFake
    implements _i9.IWebSocketHandler {
  _FakeIWebSocketHandler_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_15 extends _i1.SmartFake implements _i10.Response {
  _FakeResponse_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_16 extends _i1.SmartFake
    implements _i10.StreamedResponse {
  _FakeStreamedResponse_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlockchainIdentity_17 extends _i1.SmartFake
    implements _i11.BlockchainIdentity {
  _FakeBlockchainIdentity_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_18 extends _i1.SmartFake implements _i12.Widget {
  _FakeWidget_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [ExplorerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockExplorerService extends _i1.Mock implements _i13.ExplorerService {
  MockExplorerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get projectId => (super.noSuchMethod(
        Invocation.getter(#projectId),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#projectId),
        ),
      ) as String);

  @override
  _i2.ValueNotifier<bool> get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#initialized),
        ),
      ) as _i2.ValueNotifier<bool>);

  @override
  set initialized(_i2.ValueNotifier<bool>? _initialized) => super.noSuchMethod(
        Invocation.setter(
          #initialized,
          _initialized,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ValueNotifier<int> get totalListings => (super.noSuchMethod(
        Invocation.getter(#totalListings),
        returnValue: _FakeValueNotifier_0<int>(
          this,
          Invocation.getter(#totalListings),
        ),
      ) as _i2.ValueNotifier<int>);

  @override
  set totalListings(_i2.ValueNotifier<int>? _totalListings) =>
      super.noSuchMethod(
        Invocation.setter(
          #totalListings,
          _totalListings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ValueNotifier<List<_i15.W3MWalletInfo>> get listings =>
      (super.noSuchMethod(
        Invocation.getter(#listings),
        returnValue: _FakeValueNotifier_0<List<_i15.W3MWalletInfo>>(
          this,
          Invocation.getter(#listings),
        ),
      ) as _i2.ValueNotifier<List<_i15.W3MWalletInfo>>);

  @override
  set listings(_i2.ValueNotifier<List<_i15.W3MWalletInfo>>? _listings) =>
      super.noSuchMethod(
        Invocation.setter(
          #listings,
          _listings,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ValueNotifier<bool> get isSearching => (super.noSuchMethod(
        Invocation.getter(#isSearching),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#isSearching),
        ),
      ) as _i2.ValueNotifier<bool>);

  @override
  set isSearching(_i2.ValueNotifier<bool>? _isSearching) => super.noSuchMethod(
        Invocation.setter(
          #isSearching,
          _isSearching,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set featuredWalletIds(Set<String>? _featuredWalletIds) => super.noSuchMethod(
        Invocation.setter(
          #featuredWalletIds,
          _featuredWalletIds,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set includedWalletIds(Set<String>? _includedWalletIds) => super.noSuchMethod(
        Invocation.setter(
          #includedWalletIds,
          _includedWalletIds,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set excludedWalletIds(Set<String>? _excludedWalletIds) => super.noSuchMethod(
        Invocation.setter(
          #excludedWalletIds,
          _excludedWalletIds,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get searchValue => (super.noSuchMethod(
        Invocation.getter(#searchValue),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#searchValue),
        ),
      ) as String);

  @override
  bool get canPaginate => (super.noSuchMethod(
        Invocation.getter(#canPaginate),
        returnValue: false,
      ) as bool);

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> paginate() => (super.noSuchMethod(
        Invocation.method(
          #paginate,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> storeConnectedWalletData(_i15.W3MWalletInfo? walletInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeConnectedWalletData,
          [walletInfo],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void search({String? query}) => super.noSuchMethod(
        Invocation.method(
          #search,
          [],
          {#query: query},
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getWalletImageUrl(String? imageId) => (super.noSuchMethod(
        Invocation.method(
          #getWalletImageUrl,
          [imageId],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #getWalletImageUrl,
            [imageId],
          ),
        ),
      ) as String);

  @override
  String getAssetImageUrl(String? imageId) => (super.noSuchMethod(
        Invocation.method(
          #getAssetImageUrl,
          [imageId],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #getAssetImageUrl,
            [imageId],
          ),
        ),
      ) as String);

  @override
  _i17.WalletRedirect? getWalletRedirect(_i18.Listing? listing) =>
      (super.noSuchMethod(Invocation.method(
        #getWalletRedirect,
        [listing],
      )) as _i17.WalletRedirect?);

  @override
  _i16.Future<_i17.WalletRedirect?> tryWalletRedirectByName(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryWalletRedirectByName,
          [name],
        ),
        returnValue: _i16.Future<_i17.WalletRedirect?>.value(),
      ) as _i16.Future<_i17.WalletRedirect?>);
}

/// A class which mocks [W3MService].
///
/// See the documentation for Mockito's code generation for more information.
class MockW3MService extends _i1.Mock implements _i19.W3MService {
  MockW3MService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set connectResponse(_i4.ConnectResponse? _connectResponse) =>
      super.noSuchMethod(
        Invocation.setter(
          #connectResponse,
          _connectResponse,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Event<_i3.EventArgs> get onPairingExpire => (super.noSuchMethod(
        Invocation.getter(#onPairingExpire),
        returnValue: _FakeEvent_1<_i3.EventArgs>(
          this,
          Invocation.getter(#onPairingExpire),
        ),
      ) as _i3.Event<_i3.EventArgs>);

  @override
  _i3.Event<_i20.WalletErrorEvent> get onWalletConnectionError =>
      (super.noSuchMethod(
        Invocation.getter(#onWalletConnectionError),
        returnValue: _FakeEvent_1<_i20.WalletErrorEvent>(
          this,
          Invocation.getter(#onWalletConnectionError),
        ),
      ) as _i3.Event<_i20.WalletErrorEvent>);

  @override
  _i20.W3MServiceStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i20.W3MServiceStatus.idle,
      ) as _i20.W3MServiceStatus);

  @override
  bool get hasNamespaces => (super.noSuchMethod(
        Invocation.getter(#hasNamespaces),
        returnValue: false,
      ) as bool);

  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
      ) as bool);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> selectChain(
    _i21.W3MChainInfo? chainInfo, {
    bool? switchChain = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectChain,
          [chainInfo],
          {#switchChain: switchChain},
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> openModal(
    _i12.BuildContext? context, [
    _i12.Widget? startWidget,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #openModal,
          [
            context,
            startWidget,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> expirePreviousInactivePairings() => (super.noSuchMethod(
        Invocation.method(
          #expirePreviousInactivePairings,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> connectSelectedWallet({bool? inBrowser = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #connectSelectedWallet,
          [],
          {#inBrowser: inBrowser},
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> buildConnectionUri() => (super.noSuchMethod(
        Invocation.method(
          #buildConnectionUri,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> launchConnectedWallet() => (super.noSuchMethod(
        Invocation.method(
          #launchConnectedWallet,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  String getReferer() => (super.noSuchMethod(
        Invocation.method(
          #getReferer,
          [],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #getReferer,
            [],
          ),
        ),
      ) as String);

  @override
  _i16.Future<void> reconnectRelay() => (super.noSuchMethod(
        Invocation.method(
          #reconnectRelay,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> disconnect({bool? disconnectAllSessions = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
          {#disconnectAllSessions: disconnectAllSessions},
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void closeModal() => super.noSuchMethod(
        Invocation.method(
          #closeModal,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void selectWallet(_i15.W3MWalletInfo? walletInfo) => super.noSuchMethod(
        Invocation.method(
          #selectWallet,
          [walletInfo],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void launchBlockExplorer() => super.noSuchMethod(
        Invocation.method(
          #launchBlockExplorer,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<_i17.WalletRedirect?> sessionWalletRedirect() =>
      (super.noSuchMethod(
        Invocation.method(
          #sessionWalletRedirect,
          [],
        ),
        returnValue: _i16.Future<_i17.WalletRedirect?>.value(),
      ) as _i16.Future<_i17.WalletRedirect?>);

  @override
  void addListener(_i22.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i22.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UrlUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockUrlUtils extends _i1.Mock implements _i23.UrlUtils {
  MockUrlUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<bool> Function(String) get androidAppCheck => (super.noSuchMethod(
        Invocation.getter(#androidAppCheck),
        returnValue: (String uri) => _i16.Future<bool>.value(false),
      ) as _i16.Future<bool> Function(String));

  @override
  _i16.Future<bool> Function(
    Uri, {
    _i24.LaunchMode? mode,
  }) get launchUrlFunc => (super.noSuchMethod(
        Invocation.getter(#launchUrlFunc),
        returnValue: (
          Uri url, {
          _i24.LaunchMode? mode,
        }) =>
            _i16.Future<bool>.value(false),
      ) as _i16.Future<bool> Function(
        Uri, {
        _i24.LaunchMode? mode,
      }));

  @override
  _i16.Future<bool> Function(Uri) get canLaunchUrlFunc => (super.noSuchMethod(
        Invocation.getter(#canLaunchUrlFunc),
        returnValue: (Uri url) => _i16.Future<bool>.value(false),
      ) as _i16.Future<bool> Function(Uri));

  @override
  _i16.Future<bool> isInstalled(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #isInstalled,
          [uri],
        ),
        returnValue: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<bool> launchUrl(
    Uri? url, {
    _i24.LaunchMode? mode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchUrl,
          [url],
          {#mode: mode},
        ),
        returnValue: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);

  @override
  _i16.Future<void> openRedirect(
    _i17.WalletRedirect? redirect, {
    String? wcURI,
    _i25.PlatformType? pType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openRedirect,
          [redirect],
          {
            #wcURI: wcURI,
            #pType: pType,
          },
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);
}

/// A class which mocks [PlatformUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformUtils extends _i1.Mock implements _i26.PlatformUtils {
  MockPlatformUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.PlatformExact getPlatformExact() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformExact,
          [],
        ),
        returnValue: _i25.PlatformExact.iOS,
      ) as _i25.PlatformExact);

  @override
  _i25.PlatformType getPlatformType() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformType,
          [],
        ),
        returnValue: _i25.PlatformType.mobile,
      ) as _i25.PlatformType);

  @override
  bool canDetectInstalledApps() => (super.noSuchMethod(
        Invocation.method(
          #canDetectInstalledApps,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isBottomSheet() => (super.noSuchMethod(
        Invocation.method(
          #isBottomSheet,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isLongBottomSheet(_i12.Orientation? orientation) => (super.noSuchMethod(
        Invocation.method(
          #isLongBottomSheet,
          [orientation],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool isMobileWidth(double? width) => (super.noSuchMethod(
        Invocation.method(
          #isMobileWidth,
          [width],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [ToastUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockToastUtils extends _i1.Mock implements _i27.ToastUtils {
  MockToastUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Stream<_i28.ToastMessage?> get toasts => (super.noSuchMethod(
        Invocation.getter(#toasts),
        returnValue: _i16.Stream<_i28.ToastMessage?>.empty(),
      ) as _i16.Stream<_i28.ToastMessage?>);

  @override
  void show(_i28.ToastMessage? message) => super.noSuchMethod(
        Invocation.method(
          #show,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Web3App].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeb3App extends _i1.Mock implements _i4.Web3App {
  MockWeb3App() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get protocol => (super.noSuchMethod(
        Invocation.getter(#protocol),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#protocol),
        ),
      ) as String);

  @override
  int get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: 0,
      ) as int);

  @override
  _i4.ICore get core => (super.noSuchMethod(
        Invocation.getter(#core),
        returnValue: _FakeICore_2(
          this,
          Invocation.getter(#core),
        ),
      ) as _i4.ICore);

  @override
  _i4.PairingMetadata get metadata => (super.noSuchMethod(
        Invocation.getter(#metadata),
        returnValue: _FakePairingMetadata_3(
          this,
          Invocation.getter(#metadata),
        ),
      ) as _i4.PairingMetadata);

  @override
  _i4.ISignEngine get signEngine => (super.noSuchMethod(
        Invocation.getter(#signEngine),
        returnValue: _FakeISignEngine_4(
          this,
          Invocation.getter(#signEngine),
        ),
      ) as _i4.ISignEngine);

  @override
  set signEngine(_i4.ISignEngine? _signEngine) => super.noSuchMethod(
        Invocation.setter(
          #signEngine,
          _signEngine,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.IAuthEngine get authEngine => (super.noSuchMethod(
        Invocation.getter(#authEngine),
        returnValue: _FakeIAuthEngine_5(
          this,
          Invocation.getter(#authEngine),
        ),
      ) as _i4.IAuthEngine);

  @override
  set authEngine(_i4.IAuthEngine? _authEngine) => super.noSuchMethod(
        Invocation.setter(
          #authEngine,
          _authEngine,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Event<_i4.SessionConnect> get onSessionConnect => (super.noSuchMethod(
        Invocation.getter(#onSessionConnect),
        returnValue: _FakeEvent_1<_i4.SessionConnect>(
          this,
          Invocation.getter(#onSessionConnect),
        ),
      ) as _i3.Event<_i4.SessionConnect>);

  @override
  _i3.Event<_i4.SessionEvent> get onSessionEvent => (super.noSuchMethod(
        Invocation.getter(#onSessionEvent),
        returnValue: _FakeEvent_1<_i4.SessionEvent>(
          this,
          Invocation.getter(#onSessionEvent),
        ),
      ) as _i3.Event<_i4.SessionEvent>);

  @override
  _i3.Event<_i4.SessionExpire> get onSessionExpire => (super.noSuchMethod(
        Invocation.getter(#onSessionExpire),
        returnValue: _FakeEvent_1<_i4.SessionExpire>(
          this,
          Invocation.getter(#onSessionExpire),
        ),
      ) as _i3.Event<_i4.SessionExpire>);

  @override
  _i3.Event<_i4.SessionProposalEvent> get onProposalExpire =>
      (super.noSuchMethod(
        Invocation.getter(#onProposalExpire),
        returnValue: _FakeEvent_1<_i4.SessionProposalEvent>(
          this,
          Invocation.getter(#onProposalExpire),
        ),
      ) as _i3.Event<_i4.SessionProposalEvent>);

  @override
  _i3.Event<_i4.SessionExtend> get onSessionExtend => (super.noSuchMethod(
        Invocation.getter(#onSessionExtend),
        returnValue: _FakeEvent_1<_i4.SessionExtend>(
          this,
          Invocation.getter(#onSessionExtend),
        ),
      ) as _i3.Event<_i4.SessionExtend>);

  @override
  _i3.Event<_i4.SessionPing> get onSessionPing => (super.noSuchMethod(
        Invocation.getter(#onSessionPing),
        returnValue: _FakeEvent_1<_i4.SessionPing>(
          this,
          Invocation.getter(#onSessionPing),
        ),
      ) as _i3.Event<_i4.SessionPing>);

  @override
  _i3.Event<_i4.SessionUpdate> get onSessionUpdate => (super.noSuchMethod(
        Invocation.getter(#onSessionUpdate),
        returnValue: _FakeEvent_1<_i4.SessionUpdate>(
          this,
          Invocation.getter(#onSessionUpdate),
        ),
      ) as _i3.Event<_i4.SessionUpdate>);

  @override
  _i3.Event<_i4.SessionDelete> get onSessionDelete => (super.noSuchMethod(
        Invocation.getter(#onSessionDelete),
        returnValue: _FakeEvent_1<_i4.SessionDelete>(
          this,
          Invocation.getter(#onSessionDelete),
        ),
      ) as _i3.Event<_i4.SessionDelete>);

  @override
  _i5.IGenericStore<_i4.ProposalData> get proposals => (super.noSuchMethod(
        Invocation.getter(#proposals),
        returnValue: _FakeIGenericStore_6<_i4.ProposalData>(
          this,
          Invocation.getter(#proposals),
        ),
      ) as _i5.IGenericStore<_i4.ProposalData>);

  @override
  _i6.ISessions get sessions => (super.noSuchMethod(
        Invocation.getter(#sessions),
        returnValue: _FakeISessions_7(
          this,
          Invocation.getter(#sessions),
        ),
      ) as _i6.ISessions);

  @override
  _i5.IGenericStore<_i4.SessionRequest> get pendingRequests =>
      (super.noSuchMethod(
        Invocation.getter(#pendingRequests),
        returnValue: _FakeIGenericStore_6<_i4.SessionRequest>(
          this,
          Invocation.getter(#pendingRequests),
        ),
      ) as _i5.IGenericStore<_i4.SessionRequest>);

  @override
  _i4.IPairingStore get pairings => (super.noSuchMethod(
        Invocation.getter(#pairings),
        returnValue: _FakeIPairingStore_8(
          this,
          Invocation.getter(#pairings),
        ),
      ) as _i4.IPairingStore);

  @override
  _i3.Event<_i4.AuthResponse> get onAuthResponse => (super.noSuchMethod(
        Invocation.getter(#onAuthResponse),
        returnValue: _FakeEvent_1<_i4.AuthResponse>(
          this,
          Invocation.getter(#onAuthResponse),
        ),
      ) as _i3.Event<_i4.AuthResponse>);

  @override
  _i5.IGenericStore<_i4.AuthPublicKey> get authKeys => (super.noSuchMethod(
        Invocation.getter(#authKeys),
        returnValue: _FakeIGenericStore_6<_i4.AuthPublicKey>(
          this,
          Invocation.getter(#authKeys),
        ),
      ) as _i5.IGenericStore<_i4.AuthPublicKey>);

  @override
  _i5.IGenericStore<String> get pairingTopics => (super.noSuchMethod(
        Invocation.getter(#pairingTopics),
        returnValue: _FakeIGenericStore_6<String>(
          this,
          Invocation.getter(#pairingTopics),
        ),
      ) as _i5.IGenericStore<String>);

  @override
  _i5.IGenericStore<_i4.StoredCacao> get completeRequests =>
      (super.noSuchMethod(
        Invocation.getter(#completeRequests),
        returnValue: _FakeIGenericStore_6<_i4.StoredCacao>(
          this,
          Invocation.getter(#completeRequests),
        ),
      ) as _i5.IGenericStore<_i4.StoredCacao>);

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<_i4.ConnectResponse> connect({
    Map<String, _i4.RequiredNamespace>? requiredNamespaces,
    Map<String, _i4.RequiredNamespace>? optionalNamespaces,
    Map<String, String>? sessionProperties,
    String? pairingTopic,
    List<_i4.Relay>? relays,
    List<List<String>>? methods = const [
      [
        r'wc_sessionPropose',
        r'wc_sessionRequest',
      ],
      [r'wc_authRequest'],
    ],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {
            #requiredNamespaces: requiredNamespaces,
            #optionalNamespaces: optionalNamespaces,
            #sessionProperties: sessionProperties,
            #pairingTopic: pairingTopic,
            #relays: relays,
            #methods: methods,
          },
        ),
        returnValue:
            _i16.Future<_i4.ConnectResponse>.value(_FakeConnectResponse_9(
          this,
          Invocation.method(
            #connect,
            [],
            {
              #requiredNamespaces: requiredNamespaces,
              #optionalNamespaces: optionalNamespaces,
              #sessionProperties: sessionProperties,
              #pairingTopic: pairingTopic,
              #relays: relays,
              #methods: methods,
            },
          ),
        )),
      ) as _i16.Future<_i4.ConnectResponse>);

  @override
  _i16.Future<dynamic> request({
    required String? topic,
    required String? chainId,
    required _i4.SessionRequestParams? request,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [],
          {
            #topic: topic,
            #chainId: chainId,
            #request: request,
          },
        ),
        returnValue: _i16.Future<dynamic>.value(),
      ) as _i16.Future<dynamic>);

  @override
  void registerEventHandler({
    required String? chainId,
    required String? event,
    void Function(
      String,
      dynamic,
    )? handler,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerEventHandler,
          [],
          {
            #chainId: chainId,
            #event: event,
            #handler: handler,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> ping({required String? topic}) => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
          {#topic: topic},
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> disconnectSession({
    required String? topic,
    required _i4.WalletConnectError? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #disconnectSession,
          [],
          {
            #topic: topic,
            #reason: reason,
          },
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  Map<String, _i4.SessionData> getActiveSessions() => (super.noSuchMethod(
        Invocation.method(
          #getActiveSessions,
          [],
        ),
        returnValue: <String, _i4.SessionData>{},
      ) as Map<String, _i4.SessionData>);

  @override
  Map<String, _i4.SessionData> getSessionsForPairing(
          {required String? pairingTopic}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionsForPairing,
          [],
          {#pairingTopic: pairingTopic},
        ),
        returnValue: <String, _i4.SessionData>{},
      ) as Map<String, _i4.SessionData>);

  @override
  Map<String, _i4.ProposalData> getPendingSessionProposals() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingSessionProposals,
          [],
        ),
        returnValue: <String, _i4.ProposalData>{},
      ) as Map<String, _i4.ProposalData>);

  @override
  _i16.Future<_i4.AuthRequestResponse> requestAuth({
    required _i4.AuthRequestParams? params,
    String? pairingTopic,
    List<List<String>>? methods = const [
      [
        r'wc_sessionPropose',
        r'wc_sessionRequest',
      ],
      [r'wc_authRequest'],
    ],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestAuth,
          [],
          {
            #params: params,
            #pairingTopic: pairingTopic,
            #methods: methods,
          },
        ),
        returnValue: _i16.Future<_i4.AuthRequestResponse>.value(
            _FakeAuthRequestResponse_10(
          this,
          Invocation.method(
            #requestAuth,
            [],
            {
              #params: params,
              #pairingTopic: pairingTopic,
              #methods: methods,
            },
          ),
        )),
      ) as _i16.Future<_i4.AuthRequestResponse>);

  @override
  Map<int, _i4.StoredCacao> getCompletedRequestsForPairing(
          {required String? pairingTopic}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletedRequestsForPairing,
          [],
          {#pairingTopic: pairingTopic},
        ),
        returnValue: <int, _i4.StoredCacao>{},
      ) as Map<int, _i4.StoredCacao>);

  @override
  String formatAuthMessage({
    required String? iss,
    required _i4.CacaoRequestPayload? cacaoPayload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #formatAuthMessage,
          [],
          {
            #iss: iss,
            #cacaoPayload: cacaoPayload,
          },
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #formatAuthMessage,
            [],
            {
              #iss: iss,
              #cacaoPayload: cacaoPayload,
            },
          ),
        ),
      ) as String);
}

/// A class which mocks [Sessions].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessions extends _i1.Mock implements _i4.Sessions {
  MockSessions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#context),
        ),
      ) as String);

  @override
  String get version => (super.noSuchMethod(
        Invocation.getter(#version),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#version),
        ),
      ) as String);

  @override
  _i7.IStore<dynamic> get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeIStore_11<dynamic>(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i7.IStore<dynamic>);

  @override
  _i3.Event<_i4.StoreCreateEvent<_i4.SessionData>> get onCreate =>
      (super.noSuchMethod(
        Invocation.getter(#onCreate),
        returnValue: _FakeEvent_1<_i4.StoreCreateEvent<_i4.SessionData>>(
          this,
          Invocation.getter(#onCreate),
        ),
      ) as _i3.Event<_i4.StoreCreateEvent<_i4.SessionData>>);

  @override
  _i3.Event<_i4.StoreUpdateEvent<_i4.SessionData>> get onUpdate =>
      (super.noSuchMethod(
        Invocation.getter(#onUpdate),
        returnValue: _FakeEvent_1<_i4.StoreUpdateEvent<_i4.SessionData>>(
          this,
          Invocation.getter(#onUpdate),
        ),
      ) as _i3.Event<_i4.StoreUpdateEvent<_i4.SessionData>>);

  @override
  _i3.Event<_i4.StoreDeleteEvent<_i4.SessionData>> get onDelete =>
      (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeEvent_1<_i4.StoreDeleteEvent<_i4.SessionData>>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i3.Event<_i4.StoreDeleteEvent<_i4.SessionData>>);

  @override
  _i3.Event<_i4.StoreSyncEvent> get onSync => (super.noSuchMethod(
        Invocation.getter(#onSync),
        returnValue: _FakeEvent_1<_i4.StoreSyncEvent>(
          this,
          Invocation.getter(#onSync),
        ),
      ) as _i3.Event<_i4.StoreSyncEvent>);

  @override
  Map<String, _i4.SessionData> get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: <String, _i4.SessionData>{},
      ) as Map<String, _i4.SessionData>);

  @override
  set data(Map<String, _i4.SessionData>? _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.SessionData Function(dynamic) get fromJson => (super.noSuchMethod(
        Invocation.getter(#fromJson),
        returnValue: (dynamic __p0) => _FakeSessionData_12(
          this,
          Invocation.getter(#fromJson),
        ),
      ) as _i4.SessionData Function(dynamic));

  @override
  String get storageKey => (super.noSuchMethod(
        Invocation.getter(#storageKey),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#storageKey),
        ),
      ) as String);

  @override
  _i16.Future<void> update(
    String? topic, {
    int? expiry,
    Map<String, _i4.Namespace>? namespaces,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [topic],
          {
            #expiry: expiry,
            #namespaces: namespaces,
          },
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  bool has(String? key) => (super.noSuchMethod(
        Invocation.method(
          #has,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.SessionData? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as _i4.SessionData?);

  @override
  List<_i4.SessionData> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i4.SessionData>[],
      ) as List<_i4.SessionData>);

  @override
  _i16.Future<void> set(
    String? key,
    _i4.SessionData? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #set,
          [
            key,
            value,
          ],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> persist() => (super.noSuchMethod(
        Invocation.method(
          #persist,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> restore() => (super.noSuchMethod(
        Invocation.method(
          #restore,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void checkInitialized() => super.noSuchMethod(
        Invocation.method(
          #checkInitialized,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RelayClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRelayClient extends _i1.Mock implements _i29.RelayClient {
  MockRelayClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Event<_i3.EventArgs> get onRelayClientConnect => (super.noSuchMethod(
        Invocation.getter(#onRelayClientConnect),
        returnValue: _FakeEvent_1<_i3.EventArgs>(
          this,
          Invocation.getter(#onRelayClientConnect),
        ),
      ) as _i3.Event<_i3.EventArgs>);

  @override
  _i3.Event<_i3.EventArgs> get onRelayClientDisconnect => (super.noSuchMethod(
        Invocation.getter(#onRelayClientDisconnect),
        returnValue: _FakeEvent_1<_i3.EventArgs>(
          this,
          Invocation.getter(#onRelayClientDisconnect),
        ),
      ) as _i3.Event<_i3.EventArgs>);

  @override
  _i3.Event<_i4.ErrorEvent> get onRelayClientError => (super.noSuchMethod(
        Invocation.getter(#onRelayClientError),
        returnValue: _FakeEvent_1<_i4.ErrorEvent>(
          this,
          Invocation.getter(#onRelayClientError),
        ),
      ) as _i3.Event<_i4.ErrorEvent>);

  @override
  _i3.Event<_i4.MessageEvent> get onRelayClientMessage => (super.noSuchMethod(
        Invocation.getter(#onRelayClientMessage),
        returnValue: _FakeEvent_1<_i4.MessageEvent>(
          this,
          Invocation.getter(#onRelayClientMessage),
        ),
      ) as _i3.Event<_i4.MessageEvent>);

  @override
  _i3.Event<_i4.SubscriptionEvent> get onSubscriptionCreated =>
      (super.noSuchMethod(
        Invocation.getter(#onSubscriptionCreated),
        returnValue: _FakeEvent_1<_i4.SubscriptionEvent>(
          this,
          Invocation.getter(#onSubscriptionCreated),
        ),
      ) as _i3.Event<_i4.SubscriptionEvent>);

  @override
  _i3.Event<_i4.SubscriptionDeletionEvent> get onSubscriptionDeleted =>
      (super.noSuchMethod(
        Invocation.getter(#onSubscriptionDeleted),
        returnValue: _FakeEvent_1<_i4.SubscriptionDeletionEvent>(
          this,
          Invocation.getter(#onSubscriptionDeleted),
        ),
      ) as _i3.Event<_i4.SubscriptionDeletionEvent>);

  @override
  _i3.Event<_i3.EventArgs> get onSubscriptionResubscribed =>
      (super.noSuchMethod(
        Invocation.getter(#onSubscriptionResubscribed),
        returnValue: _FakeEvent_1<_i3.EventArgs>(
          this,
          Invocation.getter(#onSubscriptionResubscribed),
        ),
      ) as _i3.Event<_i3.EventArgs>);

  @override
  _i3.Event<_i3.EventArgs> get onSubscriptionSync => (super.noSuchMethod(
        Invocation.getter(#onSubscriptionSync),
        returnValue: _FakeEvent_1<_i3.EventArgs>(
          this,
          Invocation.getter(#onSubscriptionSync),
        ),
      ) as _i3.Event<_i3.EventArgs>);

  @override
  set jsonRPC(_i30.Peer? _jsonRPC) => super.noSuchMethod(
        Invocation.setter(
          #jsonRPC,
          _jsonRPC,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, _i16.Future<dynamic>> get pendingSubscriptions =>
      (super.noSuchMethod(
        Invocation.getter(#pendingSubscriptions),
        returnValue: <String, _i16.Future<dynamic>>{},
      ) as Map<String, _i16.Future<dynamic>>);

  @override
  set pendingSubscriptions(
          Map<String, _i16.Future<dynamic>>? _pendingSubscriptions) =>
      super.noSuchMethod(
        Invocation.setter(
          #pendingSubscriptions,
          _pendingSubscriptions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.IMessageTracker get messageTracker => (super.noSuchMethod(
        Invocation.getter(#messageTracker),
        returnValue: _FakeIMessageTracker_13(
          this,
          Invocation.getter(#messageTracker),
        ),
      ) as _i8.IMessageTracker);

  @override
  set messageTracker(_i8.IMessageTracker? _messageTracker) =>
      super.noSuchMethod(
        Invocation.setter(
          #messageTracker,
          _messageTracker,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.IGenericStore<String> get topicMap => (super.noSuchMethod(
        Invocation.getter(#topicMap),
        returnValue: _FakeIGenericStore_6<String>(
          this,
          Invocation.getter(#topicMap),
        ),
      ) as _i5.IGenericStore<String>);

  @override
  set topicMap(_i5.IGenericStore<String>? _topicMap) => super.noSuchMethod(
        Invocation.setter(
          #topicMap,
          _topicMap,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.IWebSocketHandler get socketHandler => (super.noSuchMethod(
        Invocation.getter(#socketHandler),
        returnValue: _FakeIWebSocketHandler_14(
          this,
          Invocation.getter(#socketHandler),
        ),
      ) as _i9.IWebSocketHandler);

  @override
  _i4.ICore get core => (super.noSuchMethod(
        Invocation.getter(#core),
        returnValue: _FakeICore_2(
          this,
          Invocation.getter(#core),
        ),
      ) as _i4.ICore);

  @override
  set core(_i4.ICore? _core) => super.noSuchMethod(
        Invocation.setter(
          #core,
          _core,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
      ) as bool);

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> publish({
    required String? topic,
    required String? message,
    required int? ttl,
    required int? tag,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #publish,
          [],
          {
            #topic: topic,
            #message: message,
            #ttl: ttl,
            #tag: tag,
          },
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<String> subscribe({required String? topic}) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [],
          {#topic: topic},
        ),
        returnValue: _i16.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #subscribe,
            [],
            {#topic: topic},
          ),
        )),
      ) as _i16.Future<String>);

  @override
  _i16.Future<void> unsubscribe({required String? topic}) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [],
          {#topic: topic},
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> connect({String? relayUrl}) => (super.noSuchMethod(
        Invocation.method(
          #connect,
          [],
          {#relayUrl: relayUrl},
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<void> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  _i16.Future<bool> handlePublish(
    String? topic,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handlePublish,
          [
            topic,
            message,
          ],
        ),
        returnValue: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i10.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<_i10.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i16.Future<_i10.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i16.Future<_i10.Response>);

  @override
  _i16.Future<_i10.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i16.Future<_i10.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i16.Future<_i10.Response>);

  @override
  _i16.Future<_i10.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i31.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i16.Future<_i10.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i16.Future<_i10.Response>);

  @override
  _i16.Future<_i10.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i31.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i16.Future<_i10.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i16.Future<_i10.Response>);

  @override
  _i16.Future<_i10.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i31.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i16.Future<_i10.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i16.Future<_i10.Response>);

  @override
  _i16.Future<_i10.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i31.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i16.Future<_i10.Response>.value(_FakeResponse_15(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i16.Future<_i10.Response>);

  @override
  _i16.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i16.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i16.Future<String>);

  @override
  _i16.Future<_i32.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i16.Future<_i32.Uint8List>.value(_i32.Uint8List(0)),
      ) as _i16.Future<_i32.Uint8List>);

  @override
  _i16.Future<_i10.StreamedResponse> send(_i10.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i16.Future<_i10.StreamedResponse>.value(_FakeStreamedResponse_16(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i16.Future<_i10.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i33.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<bool> get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#initialized),
        ),
      ) as _i2.ValueNotifier<bool>);

  @override
  set initialized(_i2.ValueNotifier<bool>? _initialized) => super.noSuchMethod(
        Invocation.setter(
          #initialized,
          _initialized,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i34.GridItem<_i21.W3MChainInfo>> get itemListComplete =>
      (super.noSuchMethod(
        Invocation.getter(#itemListComplete),
        returnValue: <_i34.GridItem<_i21.W3MChainInfo>>[],
      ) as List<_i34.GridItem<_i21.W3MChainInfo>>);

  @override
  set itemListComplete(
          List<_i34.GridItem<_i21.W3MChainInfo>>? _itemListComplete) =>
      super.noSuchMethod(
        Invocation.setter(
          #itemListComplete,
          _itemListComplete,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.ValueNotifier<List<_i34.GridItem<_i21.W3MChainInfo>>> get itemList =>
      (super.noSuchMethod(
        Invocation.getter(#itemList),
        returnValue:
            _FakeValueNotifier_0<List<_i34.GridItem<_i21.W3MChainInfo>>>(
          this,
          Invocation.getter(#itemList),
        ),
      ) as _i2.ValueNotifier<List<_i34.GridItem<_i21.W3MChainInfo>>>);

  @override
  set itemList(
          _i2.ValueNotifier<List<_i34.GridItem<_i21.W3MChainInfo>>>?
              _itemList) =>
      super.noSuchMethod(
        Invocation.setter(
          #itemList,
          _itemList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  void filterList({String? query}) => super.noSuchMethod(
        Invocation.method(
          #filterList,
          [],
          {#query: query},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BlockchainApiUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockBlockchainApiUtils extends _i1.Mock
    implements _i35.BlockchainApiUtils {
  MockBlockchainApiUtils() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get blockchainApiUriRoot => (super.noSuchMethod(
        Invocation.getter(#blockchainApiUriRoot),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#blockchainApiUriRoot),
        ),
      ) as String);

  @override
  String get projectId => (super.noSuchMethod(
        Invocation.getter(#projectId),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#projectId),
        ),
      ) as String);

  @override
  _i16.Future<_i11.BlockchainIdentity> getIdentity(
    String? address,
    int? chainId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIdentity,
          [
            address,
            chainId,
          ],
        ),
        returnValue: _i16.Future<_i11.BlockchainIdentity>.value(
            _FakeBlockchainIdentity_17(
          this,
          Invocation.method(
            #getIdentity,
            [
              address,
              chainId,
            ],
          ),
        )),
      ) as _i16.Future<_i11.BlockchainIdentity>);
}

/// A class which mocks [LedgerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLedgerService extends _i1.Mock implements _i36.LedgerService {
  MockLedgerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<double> getBalance(
    String? rpcUrl,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [
            rpcUrl,
            address,
          ],
        ),
        returnValue: _i16.Future<double>.value(0.0),
      ) as _i16.Future<double>);

  @override
  _i16.Future<String> fetchEnsName(
    String? rpcUrl,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchEnsName,
          [
            rpcUrl,
            address,
          ],
        ),
        returnValue: _i16.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #fetchEnsName,
            [
              rpcUrl,
              address,
            ],
          ),
        )),
      ) as _i16.Future<String>);

  @override
  _i16.Future<String> fetchEnsAvatar(
    String? rpcUrl,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchEnsAvatar,
          [
            rpcUrl,
            address,
          ],
        ),
        returnValue: _i16.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #fetchEnsAvatar,
            [
              rpcUrl,
              address,
            ],
          ),
        )),
      ) as _i16.Future<String>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i37.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i16.Future<void>.value(),
        returnValueForMissingStub: _i16.Future<void>.value(),
      ) as _i16.Future<void>);

  @override
  String? getString(
    String? key, {
    String? defaultValue,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
        {#defaultValue: defaultValue},
      )) as String?);

  @override
  _i16.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i16.Future<bool>.value(false),
      ) as _i16.Future<bool>);
}

/// A class which mocks [WidgetStack].
///
/// See the documentation for Mockito's code generation for more information.
class MockWidgetStack extends _i1.Mock implements _i38.WidgetStack {
  MockWidgetStack() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<bool> get onRenderScreen => (super.noSuchMethod(
        Invocation.getter(#onRenderScreen),
        returnValue: _FakeValueNotifier_0<bool>(
          this,
          Invocation.getter(#onRenderScreen),
        ),
      ) as _i2.ValueNotifier<bool>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i12.Widget getCurrent() => (super.noSuchMethod(
        Invocation.method(
          #getCurrent,
          [],
        ),
        returnValue: _FakeWidget_18(
          this,
          Invocation.method(
            #getCurrent,
            [],
          ),
        ),
      ) as _i12.Widget);

  @override
  void push(
    _i12.Widget? widget, {
    bool? renderScreen = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #push,
          [widget],
          {#renderScreen: renderScreen},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pop() => super.noSuchMethod(
        Invocation.method(
          #pop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool canPop() => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  void popUntil(_i2.Key? key) => super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool containsKey(_i2.Key? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addDefault() => super.noSuchMethod(
        Invocation.method(
          #addDefault,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i22.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i22.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
